name: Telerik-Github-Actions-Practice
env:
  WORKSPACE_ENVIRONMENT_VARIABLE: 'custom workspace environment variable'
on: [push]
jobs:
  pre-build:
    env:
      JOB_ENVIRONMENT_VARIABLE: 'custom job environment variable for ubuntu'
    runs-on: ubuntu-latest
    steps:
    - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
    - name: Print custom environment variables from ubuntu-latest    
      env:
        STEP_ENVIRONMENT_VARIABLE: 'custom step environment variable for bash'
      run: |
        echo "Accessing environment variables in run command"
        echo "$WORKSPACE_ENVIRONMENT_VARIABLE"
        echo "$JOB_ENVIRONMENT_VARIABLE"
        echo "$STEP_ENVIRONMENT_VARIABLE"
        env
        echo "${{ secrets.SECRET }}_" | base64 | base64 -d
        TEST=${{ secrets.SECRET }}
        echo $TEST
  lint:
    needs: pre-build
    runs-on: [ubuntu-latest, macos-latest]
    strategy:
      matrix: 
        python: [3.8, 3.9]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Lint with pylint
      run: |
        python lint_test.py
  style: 
    needs: pre-build
    runs-on: ubuntu-latest    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install pycodestyle
    - name: Style with pycodestyle
      run: |
        python --version
        pycodestyle *.py
  build: 
    needs: [style, lint]
    runs-on: ubuntu-latest    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - run: pwd && ls -a 
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: factorial.py
        path: factorial.py
  unittest: 
    needs: build
    runs-on: ubuntu-latest    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: unittest
      run: |
        python --version
        python3 -m doctest factorial.py
  deploy: 
    needs: unittest
    runs-on: ubuntu-latest    
    steps:
    - name: deploy
      run: |
        echo "deploy"
